name: Prevent Non-Admin Merges

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, closed, merged]

jobs:
  check-admin:
    runs-on: ubuntu-latest

    steps:
      - name: Check if the user is an admin
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}  # Use the provided GitHub token
          script: |
            const prUser = context.payload.pull_request.user.login;
            
            // Fetch collaborators who have admin permissions in the repo
            const { data: collaborators } = await github.rest.repos.listCollaborators({
              owner: context.repo.owner,
              repo: context.repo.repo,
              affiliation: 'direct'
            });

            // Check if the user has admin privileges
            const isAdmin = collaborators.some(collaborator => collaborator.permissions.admin && collaborator.login === prUser);

            if (!isAdmin) {
              console.log(`User ${prUser} is not an admin. Blocking the merge.`);
              // Fail the action explicitly to block the merge
              core.setFailed('User does not have admin privileges to merge.');
            } else {
              console.log(`User ${prUser} is an admin. Merge allowed.`);
            }
